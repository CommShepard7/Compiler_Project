JUMP main

pgcd
LOADL 0
LOAD (1) -2[LB]
LOAD (1) -1[LB]
boucle
LOAD (1) 5[LB]
JUMPIF (0) fin
LOAD (1) 4[LB]
LOAD (1) 5 [LB]
SUBR IMod
STORE (1) 3[LB]
LOAD (1) 5[LB]
STORE (1) 4[LB]
LOAD (1) 3[LB]
STORE(1) 5[LB]
JUMP boucle
fin
LOAD (1) 4[LB]
RETURN (1) 2

norm
LOAD (1) -2[LB]
LOAD (1) -1[LB]
CALL (LB) pgcd
LOAD (1) -2[LB]
LOAD (1) 3[LB]
SUBR IDiv
LOAD (1) -1[LB]
LOAD (1) 3[LB]
SUBR IDiv
RETURN (2) 2

ROut
LOADL '['
SUBR COut
LOAD (1) -2[LB]
SUBR IOut
LOADL '/'
SUBR COut
LOAD (1) -1[LB]
SUBR IOut
LOADL ']'
SUBR COut
RETURN (0) 2

RAdd
LOAD (1) -4[LB]
LOAD (1) -1[LB]
SUBR IMul
LOAD (1) -2[LB]
LOAD (1) -3[LB]
SUBR IMul
SUBR IAdd
LOAD (1) -3[LB]
LOAD (1) -1[LB]
SUBR IMul
CALL (ST) norm
RETURN (2) 4

RMul
LOAD (1) -4[LB]
LOAD (1) -2[LB]
SUBR IMul
LOAD (1) -3[LB]
LOAD (1) -1[LB]
SUBR IMul
CALL (ST) norm
RETURN (2) 4

divRat
LOADA -4 [LB]
LOADI (2)
LOADA -2[ST]
LOADI (1)
POP (1) 2
LOADA -2 [LB]
LOADI (2)
POP (1) 1
SUBR  IMul
LOADA -2 [LB]
LOADI (2)
LOADA -2[ST]
LOADI (1)
POP (1) 2
LOADA -4 [LB]
LOADI (2)
POP (1) 1
SUBR  IMul
RETURN (2) 4
HALT

moinsRat
LOADA -4 [LB]
LOADI (2)
LOADL -1
LOADL 1
LOADA -2 [LB]
LOADI (2)
CALL (ST)  RMul
CALL (ST) RAdd
RETURN (2) 4
HALT

eqRat
PUSH 2
LOADA -4 [LB]
LOADI (2)
LOADA -2 [LB]
LOADI (2)
CALL (ST) moinsRat
STORE (2) 3[LB]
LOADA 3 [LB]
LOADI (2)
LOADA -2[ST]
LOADI (1)
POP (1) 2
LOADL 0
SUBR IEq
RETURN (1) 4
HALT

intersection
LOADA -8 [LB]
LOADL 0
SUBR Iadd
LOADI (2)
LOADA -4 [LB]
LOADL 0
SUBR Iadd
LOADI (2)
CALL (ST) eqRat
JUMPIF (0) label27
LOADL 1
SUBR MVoid
SUBR MVoid
RETURN (3) 8
POP (0) 0
JUMP label28
label27
PUSH 1
LOADL 2
SUBR MAlloc
STORE (1) 3[LB]
PUSH 2
LOADA -8 [LB]
LOADL 2
SUBR Iadd
LOADI (2)
LOADA -4 [LB]
LOADL 2
SUBR Iadd
LOADI (2)
CALL (ST) moinsRat
LOADA -4 [LB]
LOADL 0
SUBR Iadd
LOADI (2)
LOADA -8 [LB]
LOADL 0
SUBR Iadd
LOADI (2)
CALL (ST) moinsRat
CALL (ST) divRat
STORE (2) 4[LB]
LOADA 4 [LB]
LOADI (2)
LOADA 3 [LB]
LOADI (1)
STOREI (2)
PUSH 1
LOADL 2
SUBR MAlloc
STORE (1) 6[LB]
LOADA -8 [LB]
LOADL 0
SUBR Iadd
LOADI (2)
LOADA 4 [LB]
LOADI (2)
CALL (ST)  RMul
LOADA -8 [LB]
LOADL 2
SUBR Iadd
LOADI (2)
CALL (ST) RAdd
LOADA 6 [LB]
LOADI (1)
STOREI (2)
PUSH 2
LOADA 3 [LB]
LOADI (1)
LOADA 6 [LB]
LOADI (1)
STORE (2) 7[LB]
LOADL 0
LOADA 7 [LB]
LOADI (2)
RETURN (3) 8
POP (0) 6
label28
HALT

printPositionOption
LOADA -3 [LB]
LOADL 0
SUBR Iadd
LOADI (1)
JUMPIF (0) label29
LOADL 0
SUBR BOut
POP (0) 0
JUMP label30
label29
LOADA -3 [LB]
LOADL 1
SUBR Iadd
LOADL 0
SUBR Iadd
LOADI (1)
LOADI (2)
CALL (SB) ROut
LOADA -3 [LB]
LOADL 1
SUBR Iadd
LOADL 1
SUBR Iadd
LOADI (1)
LOADI (2)
CALL (SB) ROut
POP (0) 0
label30
LOADA -3 [LB]
LOADL 0
SUBR Iadd
LOADI (1)
RETURN (1) 3
HALT

main
PUSH 4
LOADL 2
LOADL 13
LOADL 1
LOADL 3
STORE (4) 0[SB]
PUSH 2
LOADL 1
LOADL 13
STORE (2) 4[SB]
PUSH 2
LOADL 1
LOADL 4
STORE (2) 6[SB]
PUSH 1
LOADL 1
STORE (1) 8[SB]
label25
LOADA 8 [SB]
LOADI (1)
LOADL 4
SUBR ILss
JUMPIF (0) label26
PUSH 4
LOADA 4 [SB]
LOADI (2)
LOADA 6 [SB]
LOADI (2)
STORE (4) 9[SB]
PUSH 3
LOADA 0 [SB]
LOADI (4)
LOADA 9 [SB]
LOADI (4)
CALL (ST) intersection
STORE (3) 13[SB]
PUSH 1
LOADA 13 [SB]
LOADI (3)
CALL (ST) printPositionOption
STORE (1) 16[SB]
LOADL 1
LOADL 13
LOADA 4 [SB]
LOADI (2)
CALL (ST) RAdd
LOADA 4 [SB]
STOREI (2)
LOADL 1
LOADL 7
LOADA 6 [SB]
LOADI (2)
CALL (ST) RAdd
LOADA 6 [SB]
STOREI (2)
LOADL 1
LOADA 8 [SB]
LOADI (1)
SUBR IAdd
LOADA 8 [SB]
STOREI (1)
JUMP label25
label26
POP (0) 8
POP (0) 9
HALT